<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
           
    <!-- <context:component-scan base-package="ssh.demo.dao,ssh.demo.service,ssh.demo.action" />      
    
    <import resource="dao.xml"/>       
    <import resource="service.xml"/>   -->
    
    <!-- 配置注解自动扫描的包 -->  
   	<context:component-scan base-package="cn.deepcoding"></context:component-scan>  
    <context:property-placeholder location="classpath:jdbc.properties"/>
    
    <!-- c3p0 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">  
       <property name="user" value="${jdbc.user}"></property>  
       <property name="password" value="${jdbc.password}"></property>  
       <property name="driverClass" value="${jdbc.driverClass}"></property>  
       <property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>  
         
       <property name="initialPoolSize" value="${jdbc.initPoolSize}"></property>  
       <property name="maxPoolSize" value="${jdbc.maxPoolSize}"></property>  
   </bean>
   
   <!-- 配置Hibernate的SessionFactory，通过spring提供的 LocalSessionFactoryBean配置-->  
   <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">  
       <!-- 配置依赖的数据源属性 -->  
       <property name="dataSource" ref="dataSource"></property>  
       <!-- hibernate 配置文件的路径 -->  
       <property name="configLocation" value="classpath:hibernate.cfg.xml"></property>  
       <!-- 配置hibernate映射文件的路径，可以使用通配符 -->  
       <property name="mappingLocations" value="classpath:cn/deepcoding/model/mapper/*.hbm.xml"></property>  
   </bean> 
   
   <!-- 配置  Spring 的声明式事物 -->  
   <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">  
       <property name="sessionFactory" ref="sessionFactory"></property>  
   </bean>
   
   <!-- 配置事物属性 ，需要事物管理器-->  
   <!--  <tx:advice id="txAdvice" transaction-manager="transactionManager">  
       <tx:attributes>  
			<tx:method name="save*" propagation="REQUIRED"/>  
            <tx:method name="set*" propagation="REQUIRED"/>  
            <tx:method name="del*" propagation="REQUIRED"/>  
            <tx:method name="update*" propagation="REQUIRED"/>  
              
            <tx:method name="get*" read-only="true" propagation="NOT_SUPPORTED"/>           
            <tx:method name="find*" read-only="true" propagation="NOT_SUPPORTED"/>  
            <tx:method name="query*" read-only="true" propagation="NOT_SUPPORTED"/>             
            <tx:method name="select*" read-only="true" propagation="NOT_SUPPORTED"/>  
            
       </tx:attributes>  
   </tx:advice>   -->
   <tx:annotation-driven transaction-manager="transactionManager"/>
   
   <!-- 配置事物切点，并把事物属性和切点关联起来 -->  
   <!-- <aop:config>  
      <aop:pointcut expression="execution(* com.deepcoding.service.*.*(..))" id="txPointcut"/>  
      <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>  
   </aop:config>  -->
</beans>